- hosts: vmubuntulocal
  tasks:
  - name: Instalando infraestrutura
    apt:
      pkg:
      - python3
      - git
      - pip
      - apt-transport-https
      - software-properties-common
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      update_cache: yes
    become: yes
  - name: Adiciona chave GPG docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: yes
  - name: Adiciona repositorio docker
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present
    become: yes
  - name: atualiza o apt e instala o docker
    apt: 
      pkg:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      update_cache: yes
    become: yes
  - name: Install Docker Module for Python
    pip:
      name: docker
  - name: Adiciona usuario ao grupo docker
    user:
      name: vagrant
      groups: docker
      append: yes
    become: yes
  - name: Clonando repositorio
    git:
      repo: 'https://github.com/marcosvile/portfolio.git'
      dest: /home/vagrant/portfolio
  - name: Copiando docker file app python
    copy:
      src: /home/marcos/Documentos/github/Estudos-Devops/lab-docker/app-python/Dockerfile
      dest: /home/vagrant/portfolio/Dockerfile
  - name: build docker app python
    community.general.docker_image:
      name: app-python
      build:
        path: /home/vagrant/portfolio
      source: build
  - name: copiando app-node
    copy:
      src: /home/marcos/Documentos/github/Estudos-Devops/lab-docker/app-node
      dest: /home/vagrant
      rsync_opts:
        - /node_modules
    become: yes
  - name: build docker app node
    community.docker.docker_image:
      name: app-node
      build:
        path: /home/vagrant/app-node
      source: build
  - name: iniciando container app-python
    community.docker.docker_container:
      name: app-python
      image: app-python
      state: started
      restart_policy: always
      ports:
        - "5000:5000"
  - name: iniciando container app-node
    community.docker.docker_container:
      name: app-node
      image: app-node
      state: started
      restart_policy: always
      ports:
        - "3000:3000"


    